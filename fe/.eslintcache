[{"C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\reportWebVitals.js":"1","C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\Register.js":"2","C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\technical.js":"3","C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\index.js":"4","C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\auth.js":"5","C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\create.js":"6","C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\Login.js":"7","C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\category.js":"8","C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\Home.js":"9","C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\technical_sub.js":"10","C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\GK.js":"11","C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\aptitude.js":"12","C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\App.js":"13","C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\Everyitem.js":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":7093,"mtime":1608646524586,"results":"17","hashOfConfig":"16"},{"size":5929,"mtime":1611914082369,"results":"18","hashOfConfig":"16"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"16"},{"size":1096,"mtime":1608559729703,"results":"20","hashOfConfig":"16"},{"size":9343,"mtime":1608703751607,"results":"21","hashOfConfig":"16"},{"size":5293,"mtime":1609139862997,"results":"22","hashOfConfig":"16"},{"size":1094,"mtime":1610965554222,"results":"23","hashOfConfig":"16"},{"size":1111,"mtime":1608020527607,"results":"24","hashOfConfig":"16"},{"size":4835,"mtime":1611834249311,"results":"25","hashOfConfig":"16"},{"size":4318,"mtime":1608703573574,"results":"26","hashOfConfig":"16"},{"size":4362,"mtime":1611835051549,"results":"27","hashOfConfig":"16"},{"size":1378,"mtime":1611835662928,"results":"28","hashOfConfig":"16"},{"size":4893,"mtime":1611894927991,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h46n9z",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\reportWebVitals.js",[],"C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\Register.js",[],"C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\technical.js",["65","66","67","68"],"C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\index.js",[],["69","70"],"C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\auth.js",["71","72"],"\r\n\r\nimport React, { Component } from \"react\";\r\nimport {Redirect} from 'react-router-dom';\r\nconst axios = require('axios');\r\nvar Router = require('react-router');\r\n\r\n\r\nexport default class Auth extends Component {\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state={\r\n      loggedIn:false,\r\n      routes:null,\r\n    }\r\n  }\r\n  componentDidMount()\r\n  {\r\n    console.log('propss', this.props)\r\n    axios.post('http://localhost:5000/users/login/', {\r\n      userid: this.props.location.state.userid,\r\n    userpassword: this.props.location.state.userpassword\r\n    \r\n    })\r\n    .then( (response) =>{\r\n      console.log('responsee',response)\r\n      if(response.status===200){\r\n    if(response.data.usertype === 'admin') {\r\n      this.setState({loggedIn : true,routes:<Redirect to={\"/create\"} />});\r\n    } else {\r\n      {this.setState({loggedIn : true,routes:<Redirect to={\"/category\"} />});\r\n    }\r\n\r\n    }\r\n      }\r\n  else\r\n    this.setState({routes:<Redirect to={\"/login\"} />});\r\n    });\r\n  }\r\n  \r\n\r\n  \r\n  render(){\r\n    \r\n\r\nreturn(<div>\r\n  \r\n\r\n {this.state.routes}\r\n\r\n \r\n \r\n </div>);\r\n\r\n}\r\n}","C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\create.js",["73"],"import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport {Navbar} from 'react-bootstrap';\r\nimport \"./Create.css\";\r\nexport default class Create extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangequestiontext = this.onChangequestiontext.bind(this);\r\n        this.onChangequestioncategory = this.onChangequestioncategory.bind(this);\r\n        this.onChangeanswertype = this.onChangeanswertype.bind(this);\r\n        this.onChangeanswerlist = this.onChangeanswerlist.bind(this);\r\n        \r\n        // this.onChangeoption1 = this.onChangeoption1.bind(this);\r\n        // this.onChangeoption2 = this.onChangeoption2.bind(this);\r\n        // this.onChangeoption3 = this.onChangeoption3.bind(this);\r\n        // this.onChangeoption4 = this.onChangeoption4.bind(this);\r\n        this.onChangecorrectanswer = this.onChangecorrectanswer.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        \r\n        this.state = {\r\n           \r\n            value:'',\r\n            questiontext: '',\r\n            questioncategory:'',\r\n            answertype:'',\r\n            answerlist:'',\r\n            correctanswer:'',\r\n            showMessage: false\r\n            // option1:'',\r\n            // option2:'',\r\n            // option3:'',\r\n            // option4:'',          \r\n\r\n            \r\n        }\r\n    };\r\n\r\n    error= () =>{\r\n        if(this.state.questiontext !== '' \r\n        && this.state.questioncategory !== '' \r\n        && this.state.answertype !=='' \r\n        && this.state.answerlist !== '' \r\n        && this.state.correctanswer !== '') {\r\n            this.setState({showMessage:true});\r\n        }  else {\r\n             alert(\"All fields are required\")\r\n        }\r\n       };  \r\n\r\n    onChangequestiontext(e) {\r\n        this.setState({\r\n            questiontext: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangequestioncategory(e) {\r\n        this.setState({\r\n            questioncategory: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeanswertype(e) {\r\n        this.setState({\r\n            answertype: e.target.value\r\n        });\r\n    }\r\n    onChangeanswerlist(e) {\r\n        this.setState({\r\n            answerlist: e.target.value.split(',')\r\n        });\r\n    }\r\n\r\n    \r\n   \r\n    // onChangeoption1(e) {\r\n    //     this.setState({\r\n    //         option1: e.target.value\r\n    //     });\r\n    // }\r\n    // onChangeoption2(e) {\r\n    //     this.setState({\r\n    //         option2: e.target.value\r\n    //     });\r\n    // }\r\n    // onChangeoption3(e) {\r\n    //     this.setState({\r\n    //         option3: e.target.value\r\n    //     });\r\n    // }\r\n    // onChangeoption4(e) {\r\n    //     this.setState({\r\n    //         option4: e.target.value\r\n    //     });\r\n    // }\r\n\r\n    onChangecorrectanswer(e) {\r\n        this.setState({\r\n            correctanswer: e.target.value\r\n        });\r\n    }\r\n    \r\n    \r\n\r\n  \r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        console.log(`Form submitted:`);\r\n        console.log(`Question Text: ${this.state.questiontext}`);\r\n        console.log(`Question Category: ${this.state.questioncategory}`);\r\n        console.log(`Answer Type: ${this.state.answertype}`);\r\n        console.log(`Answer list: ${this.state.answerlist}`);\r\n        \r\n        console.log(`CorrectAnswer : ${this.state.correctanswer}`);\r\n    \r\n        \r\n\r\n        const newQuestion = {\r\n            \r\n            questiontext: this.state.questiontext,\r\n            questioncategory: this.state.questioncategory,\r\n            answertype: this.state.answertype,\r\n            answerlist:this.state.answerlist,\r\n            \r\n            correctanswer: this.state.correctanswer  \r\n            \r\n        };\r\n\r\n       \r\n\r\n\r\n        axios.post('http://localhost:5000/users/ques', newQuestion)\r\n            .then(res => console.log(res.data));\r\n        \r\n        \r\n       \r\n        \r\n        this.setState({\r\n            questiontext: '',\r\n            questioncategory:'',\r\n            answertype: '',\r\n            answerlist:'',\r\n            correctanswer: '',\r\n                  \r\n\r\n            \r\n        })\r\n    }\r\n\r\n    dropdown = (e) =>{\r\n        console.log(e.target.value)\r\n       this.setState({\r\n           value: e.target.value\r\n       });   \r\n    }   \r\n    render() {\r\n        return (\r\n            <div className=\"container cd3\">\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"/\" style={{fontWeight:\"bold\"}}>Quiz App</Navbar.Brand> \r\n                    \r\n                    {/* <Navbar.Brand href=\"/category\" style={{fontWeight:\"bold\"}}>category</Navbar.Brand>    */}\r\n                </Navbar>\r\n            <div className=\"cd4\">\r\n                <h3 className=\"color\">Create New Question</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                <div  style={{width :\"500px\"}} className=\"form-group\">\r\n                        <label className=\"color\">Question Text: </label>\r\n                        <input  type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={this.state.questiontext}\r\n                                onChange={this.onChangequestiontext}\r\n                                required\r\n                                />\r\n                    </div>\r\n                    <div  style={{width :\"500px\"}} className=\"form-group\">\r\n                        <label className=\"color\">Question Category: </label>\r\n                        <select id=\"questioncategory\"   \r\n                        className=\"form-control\"\r\n                          value={this.state.questioncategory} \r\n                          onChange={this.onChangequestioncategory} \r\n                          required\r\n\r\n                      >\r\n                             <option value=\"\">select.....</option>\r\n                            <option value=\"Technical\" >Technical</option>\r\n                            <option value=\"GK\">GK</option>\r\n                            <option value=\"Aptitude\">Aptitude</option>\r\n                           \r\n                      </select>\r\n                                \r\n                                \r\n                    </div>\r\n                    <div  style={{width :\"500px\"}} className=\"form-group\">\r\n                        <label className=\"color\">Answer Type: </label>\r\n                        <select   onClick={this.dropdown} \r\n                        className=\"form-control\"\r\n                        value={this.state.answertype} \r\n                        onChange={this.onChangeanswertype} \r\n                        required\r\n                        \r\n                        >\r\n                            <option value=\"\">select.....</option>\r\n                            <option value=\"text\">Textbox</option>\r\n                            <option value=\"radio\">RadioButton</option>\r\n                            {/* <option value=\"check\">Checkbox</option>\r\n                            <option value=\"image\">image</option>\r\n                            <option value=\"video\">video</option> */}\r\n                        </select>\r\n                 \r\n                    </div>\r\n                    <div  style={{width :\"500px\"}} className=\"form-group\">\r\n                        <label className=\"color\">Answer List: </label>\r\n                        {/* {this.state.value==='text'?<div>\r\n                            <input\r\n                             type=\"text\"\r\n                             className=\"form-control\"\r\n                             id=\"t\"\r\n                             value={this.state.answerlist} \r\n                             onChange={this.onChangeanswerlist} \r\n                             />\r\n                        </div>:null} */}\r\n\r\n                        {this.state.value==='radio'?<div>\r\n                        <input type=\"text\"\r\n                         className=\"form-control\"\r\n                         placeholder=\"option1,option2,option3,option4\"\r\n                         value={this.state.answerlist} \r\n                         onChange={this.onChangeanswerlist}\r\n                         required \r\n                        /><br/>\r\n                       \r\n                                </div>:null}\r\n                       \r\n                                            \r\n                                    </div>\r\n                  \r\n                    <div  style={{width :\"500px\"}} className=\"form-group\">\r\n                        <label className=\"color\">CorrectAnswer: </label>\r\n                        <input\r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                value={this.state.correctanswer}\r\n                                onChange={this.onChangecorrectanswer}\r\n                                required\r\n                                />\r\n                    </div>\r\n                     \r\n                    <div   className=\"color\" className=\"form-group\">{\r\n                           this.state.showMessage && <p> Question Created   </p>\r\n                    }\r\n                        <button type=\"submit\" value=\"Save \" className=\"btn btn-primary middle1\" onClick={() => this.error()}>Create\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n \r\n \r\n ",["74","75"],"C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\Login.js",["76"],"import { Navbar, Nav } from 'react-bootstrap';\r\nimport \"./login.css\";\r\nimport Header from './header'\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nconst axios = require('axios');\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onChangeuserid = this.onChangeuserid.bind(this);\r\n        this.onChangepassword = this.onChangeuserpassword.bind(this);\r\n\r\n        this.state = {\r\n            userid: '',\r\n            userpassword: '',\r\n            formErrors: { userid: '', userpassword: '' },\r\n            redirect: false,\r\n            // useridValid: false,\r\n            // userpasswordValid: false,\r\n            // formValid: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        \r\n        this.setState({\r\n            username: this.props.username\r\n        })\r\n    }\r\n\r\n    handleUserInput = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        if (name === 'userid') {\r\n            this.setState({ userid: value })\r\n        } else {\r\n            this.setState({ userpassword: value })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    onChangeuserid(e) {\r\n        this.setState({\r\n            userid: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeuserpassword(e) {\r\n        this.setState({\r\n            userpassword: e.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        if (this.state.userid && this.state.userpassword) {\r\n            axios.post('http://localhost:5000/users/login/', {\r\n                userid: this.state.userid,\r\n                userpassword: this.state.userpassword\r\n            }).then((response) => {\r\n                this.props.history.push('/auth', {userid: response.data.userid, userpassword: this.state.userpassword})\r\n                // if(response.data.code !== {error: \"User does not exists\"}){\r\n                //     console.log(\"logged in successfull\")\r\n                // }\r\n                console.log(`Form submitted:`);\r\n                console.log(`Userid: ${this.state.userid}`);\r\n                console.log(`userPassword: ${this.state.userpassword}`);\r\n\r\n            })\r\n        } else {\r\n            if (this.state.userid === '') {\r\n                this.setState(prevState => ({\r\n                    formErrors: {\r\n                        ...prevState.formErrors,\r\n                        userid: 'Please enter userid'\r\n                    }\r\n                }))\r\n            }\r\n            if (this.state.userpassword === '') {\r\n                this.setState(prevState => ({\r\n                    formErrors: {\r\n                        ...prevState.formErrors,\r\n                        userpassword: 'Please enter password'\r\n                    }\r\n                }))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { formErrors } = this.state;\r\n        return (\r\n            <div className=\"container cd1\">\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand href=\"/\" style={{ fontWeight: \"bold\" }}>Quiz App</Navbar.Brand>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/register\" style={{ color: \"white\" }}>Register</Nav.Link>\r\n                    </Nav>\r\n                </Navbar>\r\n                <div className=\"container cd6 center\" style={{ position: \"absolute\", top: \"90px\", marginLeft: 600 }}>\r\n                    <h3 className=\"center\">Login</h3>\r\n\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\" style={{ width: \"200px\" }}>\r\n                            <label className=\"aa\">Userid: </label>\r\n                            <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"userid\"\r\n                                value={this.state.userid}\r\n\r\n                                onChange={this.handleUserInput}\r\n                            />\r\n                        </div>\r\n                        {formErrors && formErrors.userid && <p>{formErrors.userid}</p>}\r\n                        <div className=\"form-group\" style={{ width: \"200px\" }}>\r\n                            {/* <div className=\"form-group \" style={{width :\"200px\"}}> */}\r\n                            <label className=\"aa\">userPassword: </label>\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                className=\"form-control\"\r\n                                value={this.state.userpassword}\r\n                                onChange={this.handleUserInput}\r\n                            />\r\n                        </div>\r\n                        {formErrors && formErrors.userpassword && <p>{formErrors.userpassword}</p>}\r\n                    </form>\r\n                    <div>\r\n                        {/* <button onClick={()=>{this.setState({username:'', goBack:true})}}>Exit</button> */}\r\n                        <button className=\"btn btn-primary middle3\" onClick={this.handleSubmit}  >\r\n                            Login\r\n                                </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(Login);",["77","78"],"C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\category.js",[],"C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\Home.js",[],"C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\technical_sub.js",["79","80","81"],"C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\GK.js",[],"C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\aptitude.js",[],["82","83"],"C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\App.js",[],"C:\\Users\\pruthvik reddy\\React\\quiz-project\\fe\\src\\Components\\Everyitem.js",[],{"ruleId":"84","severity":1,"message":"85","line":68,"column":5,"nodeType":"86","endLine":68,"endColumn":15},{"ruleId":"84","severity":1,"message":"85","line":69,"column":5,"nodeType":"86","endLine":69,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":74,"column":42,"nodeType":"89","messageId":"90","endLine":74,"endColumn":44},{"ruleId":"91","severity":1,"message":"92","line":100,"column":11,"nodeType":"93","messageId":"94","endLine":100,"endColumn":18},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"91","severity":1,"message":"99","line":6,"column":5,"nodeType":"93","messageId":"94","endLine":6,"endColumn":11},{"ruleId":"100","severity":1,"message":"101","line":32,"column":7,"nodeType":"102","messageId":"103","endLine":33,"endColumn":6},{"ruleId":"104","severity":1,"message":"105","line":251,"column":46,"nodeType":"106","endLine":251,"endColumn":68},{"ruleId":"95","replacedBy":"107"},{"ruleId":"97","replacedBy":"108"},{"ruleId":"91","severity":1,"message":"109","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":14},{"ruleId":"95","replacedBy":"110"},{"ruleId":"97","replacedBy":"111"},{"ruleId":"91","severity":1,"message":"112","line":32,"column":13,"nodeType":"93","messageId":"94","endLine":32,"endColumn":27},{"ruleId":"91","severity":1,"message":"113","line":33,"column":13,"nodeType":"93","messageId":"94","endLine":33,"endColumn":25},{"ruleId":"91","severity":1,"message":"114","line":35,"column":13,"nodeType":"93","messageId":"94","endLine":35,"endColumn":26},{"ruleId":"95","replacedBy":"115"},{"ruleId":"97","replacedBy":"116"},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'answers' is defined but never used.","Identifier","unusedVar","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"'Router' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["117"],["118"],"'Header' is defined but never used.",["117"],["118"],"'correctAnswers' is assigned a value but never used.","'wrongAnswers' is assigned a value but never used.","'render_method' is assigned a value but never used.",["117"],["118"],"no-global-assign","no-unsafe-negation"]